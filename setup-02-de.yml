---
- name: Installing Sway desktop environment
  hosts: 127.0.0.1
  strategy: linear
  connection: local

  vars:
    SWAY_DIR: "{{ ansible_user_dir }}/.config/sway"
    SWAY_ZSH: false
    BIN_DIR: "{{ ansible_user_dir }}/.local/bin"
    ROOT_BIN_DIR: "/root/.local/bin"
    SYSTEMD_UDIR: "{{ ansible_user_dir }}/.config/systemd/user"
    STARSHIP_OPTIONS:
      - { section: null, option: add_newline, value: "false" }
      - { section: cmd_duration, option: disabled, value: "true" }
      - { section: line_break, option: disabled, value: "true" }
    HOWTO: |
      After a reboot you can start Sway by entering "sway" on the console or let it automatically start after login via the following entry at the beginning of your ~/.bashrc:
      if [[ -z $DISPLAY ]] && [[ $(tty) = /dev/tty1 ]]; then
        if [ -f "$FILE" ]; then mv $HOME/sway.log $HOME/sway-prev.log; fi
        #exec sway -d 2> $HOME/sway.log
        exec sway
      fi
      Also don't forget to set environment variables. Take a look at the README.md file.

  tasks:
    - name: Common | Getting Pictures directory
      shell: xdg-user-dir PICTURES
      register: XDG_OUTPUT
      when: not ansible_check_mode

    - name: Common | Setting User Picture directory fact
      set_fact: USER_PICTURE_DIR={{ XDG_OUTPUT.stdout }}
      when: not ansible_check_mode

    - name: Common | Setting USER_PICTURE_DIR for check_mode
      set_fact: USER_PICTURE_DIR="{{ ansible_user_dir }}/Pictures"
      when: ansible_check_mode

    - name: Arch | Root Tasks
      block:
        - name: Arch | Installing required software
          pacman:
            name:
              - alacritty
              - antiword
              - bemenu
              - bemenu-wlroots
              - blueman
              - cdrtools
              - docx2txt
              - ffmpeg
              - gammastep
              - gnome-power-manager
              - grim
              - highlight
              - imagemagick
              - jq
              - kanshi
              - libpipewire02
              - lsd
              - mako
              - ncmpcpp
              - network-manager-applet
              - noto-fonts-emoji
              - odt2txt
              #- otf-font-awesome
              - pavucontrol
              - pcmanfm-gtk3
              - perl-image-exiftool
              - pkgfile
              - playerctl
              - polkit-gnome
              - python-pywal
              - qt5-wayland
              - rsync
              - slurp
              - starship
              - sway
              - swayidle
              - thefuck
              #- ttf-dejavu
              - udiskie
              - waybar
              - wf-recorder
            state: latest
            update_cache: true

        - name: Arch | Making sure file ~/.gnupg/gpg.conf exists for user aur_builder
          copy:
            content: ""
            dest: "~/.gnupg/gpg.conf"
            force: false
            group: aur_builder
            owner: aur_builder
            mode: 0640
          become_user: aur_builder

        - name: Arch | Adding gpg keyserver for user aur_builder
          lineinfile:
            path: "~/.gnupg/gpg.conf"
            regexp: "^keyserver hkp.*"
            line: keyserver pool.sks-keyservers.net
            owner: aur_builder
            group: aur_builder
            mode: 0640
          become_user: aur_builder

        - name: Arch | Installing required software from aur
          aur:
            name:
              - archivemount
              - autotiling
              - avizo
              - bemenu-dmenu
              - clipman
              - dragon-drag-and-drop
              - edir
              - glow-bin
              - j4-dmenu-desktop
              - lf
              - nerd-fonts-dejavu-complete
              #- otf-font-awesome-4
              - remontoire-git
              - swappy
              - swaylock-effects-git
              #- ttf-font-awesome-4
              - wl-clipboard-git
              # - wl-clipboard-x11
              - wshowkeys-git
              - xdg-desktop-portal-wlr
            state: latest
            use: yay
            extra_args: --pgpfetch
          become_user: aur_builder
          vars:
            mitogen_task_isolation: fork
      when: ansible_distribution == 'Archlinux'
      become: true

    - name: Common | Creating directories...
      file:
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: 0750
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ SWAY_DIR }}"
        - "{{ SWAY_DIR }}/{{ ansible_hostname }}"
        - "{{ BIN_DIR }}/sway"
        - "{{ BIN_DIR }}/bash"
        - "{{ BIN_DIR }}/zsh"
        - "{{ SYSTEMD_UDIR }}"
        - "{{ ansible_user_dir }}/.config/mako"
        - "{{ ansible_user_dir }}/.config/kanshi"
        - "{{ ansible_user_dir }}/.config/swappy"
        - "{{ ansible_user_dir }}/.config/lf"
        - "{{ ansible_user_dir }}/.config/alacritty"
        - "{{ ansible_user_dir }}/.config/wal/templates"
        - "{{ ansible_user_dir }}/.config/wget"
        - "{{ ansible_user_dir }}/.config/zsh"
        - "{{ ansible_user_dir }}/.local/share/themes/Windows-10"
        - "{{ ansible_user_dir }}/.local/share/icons/Windows-10"
        - "{{ USER_PICTURE_DIR }}/screenshots"

    - name: Common | Ensure wgetrc exists
      copy:
        content: ""
        dest: "{{ ansible_user_dir }}/.config/wget/wgetrc"
        force: false
        group: "{{ ansible_user_id }}"
        owner: "{{ ansible_user_id }}"
        mode: 0640

    - name: Common | Creating config symlinks...
      file:
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: "{{ item.mode }}"
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        #force: true
        state: link
      with_items:
        - {
            src: "{{ playbook_dir }}/config/sway/sway.conf",
            dest: "{{ SWAY_DIR }}/config",
            mode: "0640",
          }
        - {
            src: "{{ playbook_dir }}/config/sway/sway.d",
            dest: "{{ SWAY_DIR }}/sway.d",
            mode: "0750",
          }
        - {
            src: "{{ ansible_user_dir }}/.cache/wal/colors-mako",
            dest: "{{ ansible_user_dir }}/.config/mako/config",
            mode: "0640",
          }
        - {
            src: "{{ playbook_dir }}/config/waybar",
            dest: "{{ ansible_user_dir }}/.config/waybar",
            mode: "0750",
          }
        - {
            src: "{{ playbook_dir }}/config/kanshi/config.example",
            dest: "{{ ansible_user_dir }}/.config/kanshi/config.example",
            mode: "0640",
          }
        - {
            src: "{{ playbook_dir }}/config/swappy/config",
            dest: "{{ ansible_user_dir }}/.config/swappy/config",
            mode: "0640",
          }
        - {
            src: "{{ playbook_dir }}/config/lf/lfrc",
            dest: "{{ ansible_user_dir }}/.config/lf/lfrc",
            mode: "0640",
          }
        - {
            src: "{{ playbook_dir }}/config/zsh/.zshrc",
            dest: "{{ ansible_user_dir }}/.config/zsh/.zshrc",
            mode: "0640",
          }
        - {
            src: "{{ playbook_dir }}/config/wal/templates/colors-mako",
            dest: "{{ ansible_user_dir }}/.config/wal/templates/colors-mako",
            mode: "0640",
          }

    - name: Common | Creating shell script symlinks...
      file:
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: 0750
        src: "{{ item }}"
        dest: "{{ BIN_DIR }}/sway/{{ item | basename }}"
        state: link
      with_fileglob:
        - "{{ playbook_dir }}/bin/*.sh"
        - "{{ playbook_dir }}/bin/emoji"
        - "{{ playbook_dir }}/bin/steam"

    - name: Common | Templating custom bashrc...
      template:
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: 0750
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      with_items:
        - {
            src: "{{ playbook_dir }}/config/bash/bashrc.j2",
            dest: "{{ BIN_DIR }}/bash/sway-de.sh",
          }
        - {
            src: "{{ playbook_dir }}/config/bash/bashrc.j2",
            dest: "{{ BIN_DIR }}/zsh/sway-de.sh",
          }

    - name: Common | Checking existence of alacritty.yml
      stat:
        path: "{{ ansible_user_dir }}/.config/alacritty/alacritty.yml"
      register: alacritty_config

    - name: Common | Templating config files...
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: 0640
      with_items:
        - {
            src: "{{ playbook_dir }}/config/alacritty/alacritty.yml.j2",
            dest: "{{ ansible_user_dir }}/.config/alacritty/alacritty.yml",
          }
      when: not alacritty_config.stat.exists

    - name: Common | Templating systemd user units...
      template:
        src: "{{ item }}"
        dest: "{{ SYSTEMD_UDIR }}/{{ item | basename | regex_replace('.j2$', '') }}"
        mode: 0640
      with_fileglob:
        - "{{ playbook_dir }}/config/systemd/user/*.j2"
      register: systemd_user_units

    - name: Common | Enabling systemd user units...
      systemd:
        name: "{{ item }}"
        enabled: true
        daemon_reload: true
        scope: user
      with_items:
        - autotiling
        - avizo-service
        - inactive-windows-transparency
        # - gammastep
        - kanshi
        - mako
        - polkit-gnome
        - ssh-agent
        - swayidle
        - udiskie
        - waybar

    - name: Common | Reloading systemd user units when changed...
      systemd:
        daemon_reload: true
        scope: user
      when: systemd_user_units.changed

    - name: Common | Checking if created colors-mako exist
      stat:
        path: "{{ ansible_user_dir }}/.cache/wal/colors-mako"
      register: mako_pywal_config

    - name: Common | Creating default pywal config
      command: wal --theme base16-dracula -o wal.sh
      when: not mako_pywal_config.stat.exists

    - name: Common | Cloning Windows-10 themes and icons...
      git:
        repo: "{{ item.src }}"
        dest: "{{ item.dest }}"
        update: true
      with_items:
        - {
            src: "https://github.com/B00merang-Project/Windows-10.git",
            dest: "{{ ansible_user_dir }}/.local/share/themes/Windows-10",
          }
        - {
            src: "https://github.com/B00merang-Artwork/Windows-10.git",
            dest: "{{ ansible_user_dir }}/.local/share/icons/Windows-10",
          }
      diff: false

    - name: Common | Extending user .bashrc...
      blockinfile:
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: 0640
        dest: "{{ ansible_user_dir }}/.bashrc"
        block: |
          for f in {{ BIN_DIR }}/bash/*.sh; do source $f; done
          eval "$(starship init bash)"
        marker: "
          # {mark} Sway desktop environment config"
        insertafter: EOF
        create: true

    - name: Common | Creating root directories...
      file:
        owner: root
        group: root
        mode: 0750
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ ROOT_BIN_DIR }}/bash"
      become: true

    - name: Common | Extending root .profile...
      blockinfile:
        dest: "/root/.profile"
        block: |
          for f in {{ ROOT_BIN_DIR }}/bash/*.sh; do source $f; done
          eval "$(starship init bash)"
        marker: "
          # {mark} Sway desktop environment config"
        insertafter: EOF
        create: true
        owner: root
        group: root
        mode: 0640
      become: true

    - name: Common | Templating root bashrc files...
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: "{{ item.mode }}"
      with_items:
        - {
            src: "{{ playbook_dir }}/config/bash/bashrc.j2",
            dest: "{{ ROOT_BIN_DIR }}/bash/sway-de.sh",
            mode: "0600",
          }
        - {
            src: "{{ playbook_dir }}/bin/sway",
            dest: "/usr/local/sbin/sway",
            mode: "0755",
          }
      become: true

    - name: Common | Configuring {{ ansible_user_dir }}/.config/gtk-3.0/settings.ini
      ini_file:
        path: "{{ ansible_user_dir }}/.config/gtk-3.0/settings.ini"
        section: Settings
        option: "{{ item.option }}"
        value: "{{ item.value }}"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: 0640
      with_items:
        - { option: "gtk-theme-name", value: "Windows-10" }
        - { option: "gtk-icon-theme-name", value: "Windows-10" }

    - name: Common | Configuring {{ ansible_user_dir }}/.config/gtk-2.0/gtkrc-2.0
      ini_file:
        path: "{{ ansible_user_dir }}/.config/gtk-2.0/gtkrc-2.0"
        section: null
        option: "{{ item.option }}"
        value: "{{ item.value }}"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: 0640
      with_items:
        - { option: "gtk-theme-name", value: '"Windows-10"' }
        - { option: "gtk-icon-theme-name", value: '"Windows-10"' }

    # {{ ansible_user_dir }}/.pam_environment is the most compatible way
    # to set enviromment variables. --> Deprecated as of
    # https://github.com/linux-pam/linux-pam/commit/ecd526743a27157c5210b0ce9867c43a2fa27784

    - name: Common | Configuring {{ ansible_user_dir }}/.config/sway/env
      blockinfile:
        dest: "{{ ansible_user_dir }}/.config/sway/env"
        block: |
          # Reduces crashs for some gdk apps, like evolution
          # ! Do not set as global variable. Electron Apps will not start !
          # export GDK_BACKEND=wayland

          # Required for tray icons on waybar
          export XDG_CURRENT_DESKTOP=sway

          # Enable QT apps to have gtk theme
          export QT_QPA_PLATFORMTHEME=qt5ct

          # Force wayland on qt apps
          export QT_QPA_PLATFORM=wayland-egl
          export QT_WAYLAND_DISABLE_WINDOWDECORATION=1
          # Explicitly set to '96' instead of 'physical' because some apps have problems
          # Looking at you nextcloud client!
          # https://github.com/nextcloud/desktop/issues/1079
          # https://github.com/swaywm/sway/issues/2424
          export QT_WAYLAND_FORCE_DPI=96

          # Make Qt apps honour DPI settings.
          export QT_AUTO_SCREEN_SCALE_FACTOR=1

          # Mozilla Wayland support + hardware video decoding
          export MOZ_ENABLE_WAYLAND=1
          export MOZ_WAYLAND_USE_VAAPI=1

          # SDL
          export SDL_VIDEODRIVER=wayland

          # Java under Xwayland
          export _JAVA_AWT_WM_NONREPARENTING=1

          # Bemenu
          export BEMENU_BACKEND=wayland

          # Session Type for later screensharing
          export XDG_SESSION_TYPE=wayland
        marker: "
          # {mark} Sway desktop environment config"
        insertafter: EOF
        create: true
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: 0640

    - name: Common | Configuring {{ ansible_user_dir }}/.config/environment.d/sway.conf
      blockinfile:
        dest: "{{ ansible_user_dir }}/.config/environment.d/sway.conf"
        block: |
          # Path for cursor themes
          XCURSOR_PATH=${HOME}/.local/share/icons

          # Path to SSH_AUTH_SOCK
          SSH_AUTH_SOCK=${HOME}/.ssh/ssh-agent.sock

          # XDG Settings
          XDG_CONFIG_HOME=${HOME}/.config
          XDG_DATA_HOME=${HOME}/.local/share
          XDG_CACHE_HOME=${HOME}/.local/cache
          GTK2_RC_FILES=${XDG_CONFIG_HOME}/gtk-2.0/gtkrc-2.0
          LESSHISTFILE=-
          WGETRC=${XDG_CONFIG_HOME}/wget/wgetrc
          WINEPREFIX=${XDG_DATA_HOME}/wineprefixes/default
          CARGO_HOME=${XDG_DATA_HOME}/cargo
          GOPATH=${XDG_DATA_HOME}/go
          HISTFILE=${XDG_DATA_HOME}/history
          NOTMUCH_CONFIG=${XDG_CONFIG_HOME}/notmuch-config
          AWS_SHARED_CREDENTIALS_FILE=${XDG_CONFIG_HOME}/aws/credentials
          AWS_CONFIG_FILE=${XDG_CONFIG_HOME}/aws/config
          DOCKER_CONFIG=${XDG_CONFIG_HOME}/docker
          KUBECONFIG=${XDG_CONFIG_HOME}/kube/config
          KIMAI_CONFIG=${XDG_CONFIG_HOME}/kimai2/settings.ini
          ZDOTDIR=${XDG_CONFIG_HOME}/zsh

          # Include {{ BIN_DIR }}/sway and ${GOPATH}/bin in $PATH
          PATH={{ BIN_DIR }}/sway:${GOPATH}/bin:${PATH}
        marker: "
          # {mark} Sway desktop environment config"
        insertafter: EOF
        create: true
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: 0640

    - name: Common | Configuring {{ ansible_user_dir }}/.profile
      blockinfile:
        dest: "{{ ansible_user_dir }}/.profile"
        block: |
          eval $(sed -e '/^$/d' -e '/^\s*#/d' -e 's/^/export /' $HOME/.config/environment.d/*.conf)
        marker: "
          # {mark} Sway desktop environment config"
        insertafter: EOF
        create: true
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: 0640

    - name: Common | Configuring {{ ansible_user_dir }}/.config/starship.toml
      ini_file:
        path: "{{ ansible_user_dir }}/.config/starship.toml"
        section: "{{ item.section }}"
        option: "{{ item.option }}"
        value: "{{ item.value }}"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: 0640
      with_items:
        - "{{ STARSHIP_OPTIONS }}"

    - name: Common | Configuring /root/.config/starship.toml
      ini_file:
        path: "/root/.config/starship.toml"
        section: "{{ item.section }}"
        option: "{{ item.option }}"
        value: "{{ item.value }}"
        owner: root
        group: root
        mode: 0640
      with_items:
        - "{{ STARSHIP_OPTIONS }}"
      become: true

    - name: Replacing sway executable in sway.desktop entry
      ini_file:
        path: /usr/share/wayland-sessions/sway.desktop
        section: "Desktop Entry"
        option: Exec
        value: /usr/local/sbin/sway
        no_extra_spaces: true
        owner: root
        group: root
        mode: 0644
      become: true

    - name: Common | Informational Output
      debug:
        msg: "{{ HOWTO.split('\n') }}"
