---
- name: Installing Sway desktop environment
  hosts: 127.0.0.1
  connection: local

  vars:
    SWAY_DIR: "{{ ansible_user_dir }}/.config/sway"
    SYSTEMD_UDIR: "{{ ansible_user_dir }}/.config/systemd/user"
    HOWTO: |
      After a reboot you can start Sway by entering "sway" on the console or let it automatically start after login via the following entry at the beginning of your ~/.bashrc:
      if [[ -z $DISPLAY ]] && [[ $(tty) = /dev/tty1 ]]; then
        sway
      fi

  tasks:
    - block:
        - name: Arch | Installing required software
          pacman:
            name:
              - sway
              - swayidle
              - mako
              - grim
              - slurp
              - most
              - blueman
              - pavucontrol
              - playerctl
              - jq
              - imagemagick
              - otf-font-awesome
              - network-manager-applet
              - noto-fonts-emoji
              - ncmpcpp
              - polkit-gnome
              - ttf-dejavu
              - qt5-wayland
              - waybar
              - alacritty
              - kanshi
            state: installed
            update_cache: yes

        - name: Arch | Installing required software from aur
          aur:
            name:
              - otf-font-awesome-4
              - ttf-font-awesome-4
              - swaylock-effects-git
              - wl-clipboard-git
              # https://github.com/starship/starship
              - starship-bin
              # https://gitlab.com/racy/swayshot/
              #- wl-clipboard-x11
              - redshift-wlr-gamma-control-git
              # https://github.com/misterdanb/avizo
              - avizo
              - gmenu
            skip_installed: true
          become: yes
          become_user: aur_builder
      when: ansible_distribution == 'Archlinux'
      become: yes

    - name: Common | Creating directories...
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ SWAY_DIR }}"
        - "{{ SWAY_DIR }}/{{ ansible_hostname }}"
        - "{{ ansible_user_dir }}/bin"
        - "{{ SYSTEMD_UDIR }}"
        - "{{ ansible_user_dir }}/.config/mako"
        - "{{ ansible_user_dir }}/.config/kanshi"
        - "{{ ansible_user_dir }}/.themes/Windows-10"
        - "{{ ansible_user_dir }}/.icons/Windows-10"
        - "{{ ansible_user_dir }}/.config/bash"
        - "{{ ansible_user_dir }}/.config/environment.d"

    - name: Common | Creating config symlinks...
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
      with_items:
        - {
            src: "{{ playbook_dir }}/config/sway/sway.conf",
            dest: "{{ SWAY_DIR }}/config",
          }
        - {
            src: "{{ playbook_dir }}/config/sway/sway.d",
            dest: "{{ SWAY_DIR }}/sway.d",
          }
        - {
            src: "{{ playbook_dir }}/config/mako/mako.conf",
            dest: "{{ ansible_user_dir }}/.config/mako/config",
          }
        - {
            src: "{{ playbook_dir }}/config/waybar",
            dest: "{{ ansible_user_dir }}/.config/waybar",
          }
        - {
            src: "{{ playbook_dir }}/config/alacritty.yml",
            dest: "{{ ansible_user_dir }}/.config/alacritty.yml",
          }
        - {
            src: "{{ playbook_dir }}/config/kanshi/config.example",
            dest: "{{ ansible_user_dir }}/.config/kanshi/config.example",
          }

    - name: Common | Creating shell script symlinks...
      file:
        src: "{{ item }}"
        dest: "{{ ansible_user_dir }}/bin/{{ item | basename }}"
        state: link
      with_fileglob:
        - "{{ playbook_dir }}/bin/*.sh"

    - name: Common | Templating custom bashrc...
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      with_items:
        - {
            src: "{{ playbook_dir }}/config/bash/bashrc.j2",
            dest: "{{ ansible_user_dir }}/.config/bash/sway-de.sh",
          }

    - name: Common | Templating systemd user units...
      template:
        src: "{{ item }}"
        dest: "{{ SYSTEMD_UDIR }}/{{ item | basename | regex_replace('.j2$', '') }}"
        mode: 0640
      with_fileglob:
        - "{{ playbook_dir }}/config/systemd/user/*.j2"

    - name: Common | Enabling systemd user units...
      systemd:
        name: "{{ item }}"
        enabled: yes
        daemon_reload: yes
        scope: user
      with_items:
        - avizo-service
        - kanshi
        - mako
        - polkit-gnome
        - redshift
        - ssh-agent
        - swayidle
        - waybar

    - name: Common | Cloning Windows-10 themes and icons...
      git:
        repo: "{{ item.src }}"
        dest: "{{ item.dest }}"
        update: yes
      with_items:
        - {
            src: "https://github.com/B00merang-Project/Windows-10.git",
            dest: "{{ ansible_user_dir }}/.themes/Windows-10",
          }
        - {
            src: "https://github.com/B00merang-Artwork/Windows-10.git",
            dest: "{{ ansible_user_dir }}/.icons/Windows-10",
          }

    - name: Common | Extending user .bashrc...
      blockinfile:
        dest: "{{ ansible_user_dir }}/.bashrc"
        block: "for f in ~/.config/bash/*.sh; do source $f; done"
        marker: "
          # {mark} Sway desktop environment config"
        insertafter: EOF
        create: yes

    - name: Common | Creating root directories...
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "/root/.config/bash"
      become: yes

    - name: Common | Extending root .bashrc...
      blockinfile:
        dest: "/root/.bashrc"
        block: "for f in ~/.config/bash/*.sh; do source $f; done"
        marker: "
          # {mark} Sway desktop environment config"
        insertafter: EOF
        create: yes
      become: yes

    - name: Common | Templating root bashrc files...
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      with_items:
        - {
            src: "{{ playbook_dir }}/config/bash/bashrc.j2",
            dest: "/root/.config/bash/sway-de.sh",
          }
      become: yes

    - name: Common | Configuring {{ ansible_user_dir }}/.config/gtk-3.0/settings.ini
      ini_file:
        path: "{{ ansible_user_dir }}/.config/gtk-3.0/settings.ini"
        section: Settings
        option: "{{ item.option }}"
        value: "{{ item.value }}"
      with_items:
        - { option: "gtk-theme-name", value: "Windows-10" }
        - { option: "gtk-icon-theme-name", value: "Windows-10" }

    - name: Common | Configuring {{ ansible_user_dir }}/.gtkrc-2.0
      ini_file:
        path: "{{ ansible_user_dir }}/.gtkrc-2.0"
        section: null
        option: "{{ item.option }}"
        value: "{{ item.value }}"
      with_items:
        - { option: "gtk-theme-name", value: '"Windows-10"' }
        - { option: "gtk-icon-theme-name", value: '"Windows-10"' }

    - name: Common | Configuring {{ ansible_user_dir }}/.config/environment.d/profile.conf...
      blockinfile:
        dest: "{{ ansible_user_dir }}/.config/environment.d/profile.conf"
        block: |
          # Enable QT apps to have gtk theme
          QT_QPA_PLATFORMTHEME=qt5ct

          # Force wayland on qt apps
          QT_QPA_PLATFORM=wayland
          QT_WAYLAND_FORCE_DPI=96
          QT_WAYLAND_DISABLE_WINDOWDECORATION=1

          # Mozilla Wayland support
          # MOZ_ENABLE_WAYLAND=1
        marker: "
          # {mark} Sway desktop environment config"
        insertafter: EOF
        create: yes

    - name: Common | Configuring {{ ansible_user_dir }}/.pam_environment
      blockinfile:
        dest: "{{ ansible_user_dir }}/.pam_environment"
        block: |
          PATH={{ ansible_user_dir }}/bin:${PATH}
          SSH_AUTH_SOCK={{ ansible_user_dir }}/.ssh/ssh-agent.sock
        marker: "
          # {mark} Sway desktop environment config"
        insertafter: EOF
        create: yes

    - name: Common | Configuring {{ ansible_user_dir }}/.config/starship.toml...
      blockinfile:
        dest: "{{ ansible_user_dir }}/.config/starship.toml"
        block: |
          # Disable the newline at the start of the prompt
          add_newline = false

          [cmd_duration]
          min_time = 6
          disabled= true

          [line_break]
          disabled = true

          [kubernetes]
          disabled = true
        marker: "
          # {mark} Sway desktop environment config"
        insertafter: EOF
        create: yes

    - name: Common | Informational Output
      debug:
        msg: "{{ HOWTO.split('\n') }}"
