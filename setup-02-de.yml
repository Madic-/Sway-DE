---
- name: Installing sway desktop environment
  hosts: 127.0.0.1
  connection: local

  vars:
    SWAY_DIR: "{{ ansible_user_dir }}/.config/sway"
    SYSTEMD_UDIR: "{{ ansible_user_dir }}/.config/systemd/user"
    GOTOP_VERSION: 3.0.0

  tasks:
    - block:
        - name: Arch | Installing required software
          pacman:
            name:
              - sway
              - swayidle
              #- swaylock
              - mako
              - grim
              - slurp
              - most
              - blueman
              - pavucontrol
              - playerctl
              - jq
              - imagemagick
              - otf-font-awesome
              - network-manager-applet
              - noto-fonts-emoji
              - ncmpcpp
              - polkit-gnome
              - ttf-dejavu
              - qt5-wayland
              - waybar
              - alacritty
            state: installed
            update_cache: yes

        - name: Arch | Installing required software from aur
          aur:
            name:
              - otf-font-awesome-4
              - ttf-font-awesome-4
              - swaylock-effects-git
              - wl-clipboard-git
              # https://github.com/starship/starship
              - starship-bin
              # https://gitlab.com/racy/swayshot/
              #- wl-clipboard-x11
              - redshift-wlr-gamma-control-git
              # https://github.com/misterdanb/avizo
              - avizo
              - sgtk-menu
            skip_installed: true
          become: yes
          become_user: aur_builder
      when: ansible_distribution == "Archlinux"
      become: yes

    - name: Common | Creating directories...
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ SWAY_DIR }}"
        - "{{ SWAY_DIR }}/{{ ansible_hostname }}"
        - "{{ ansible_user_dir }}/bin"
        - "{{ SYSTEMD_UDIR }}"
        - "{{ ansible_user_dir }}/.config/redshift"
        - "{{ ansible_user_dir }}/.config/mako"
        - "{{ ansible_user_dir }}/.themes/Windows-10"
        - "{{ ansible_user_dir }}/.icons/Windows-10"
        - "{{ ansible_user_dir }}/.config/bash"
        - "{{ ansible_user_dir }}/.config/environment.d"

    - name: Common | Creating symlinks...
      file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
      with_items:
        - {
            src: "{{ playbook_dir }}/config/sway.conf",
            dest: "{{ SWAY_DIR }}/config",
          }
        - {
            src: "{{ playbook_dir }}/config/sway.d",
            dest: "{{ SWAY_DIR }}/sway.d",
          }
        - {
            src: "{{ playbook_dir }}/config/redshift.conf",
            dest: "{{ ansible_user_dir }}/.config/redshift/config",
          }
        - {
            src: "{{ playbook_dir }}/bin/lock-sway",
            dest: "{{ ansible_user_dir }}/bin/lock-sway",
          }
        - {
            src: "{{ playbook_dir }}/bin/screenposition-sway.sh",
            dest: "{{ ansible_user_dir }}/bin/screenposition-sway.sh",
          }
        - {
            src: "{{ playbook_dir }}/bin/ssh-agent-pre.sh",
            dest: "{{ ansible_user_dir }}/bin/ssh-agent-pre.sh",
          }
        - {
            src: "{{ playbook_dir }}/bin/s",
            dest: "{{ ansible_user_dir }}/bin/s",
          }
        - {
            src: "{{ playbook_dir }}/config/mako.conf",
            dest: "{{ ansible_user_dir }}/.config/mako/config",
          }
        - {
            src: "{{ playbook_dir }}/config/waybar",
            dest: "{{ ansible_user_dir }}/.config/waybar",
          }
        - {
            src: "{{ playbook_dir }}/bin/color-picker.sh",
            dest: "{{ ansible_user_dir }}/bin/color-picker.sh",
          }
        - {
            src: "{{ playbook_dir }}/bin/screenshots",
            dest: "{{ ansible_user_dir }}/bin/screenshots",
          }

    - name: Common | Templating files...
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      with_items:
        - {
            src: "{{ playbook_dir }}/config/ssh-agent.service.j2",
            dest: "{{ SYSTEMD_UDIR }}/ssh-agent.service",
          }
        - {
            src: "{{ playbook_dir }}/config/bashrc.j2",
            dest: "{{ ansible_user_dir }}/.config/bash/custom.sh",
          }

    - name: Common | Enabling ssh-agent...
      systemd:
        state: started
        name: ssh-agent
        enabled: yes
        daemon_reload: yes
        scope: user

    # https://gitlab.com/kujeger/swayoutputctl
    - name: Common | Downloading swayoutputctl...
      get_url:
        url: "https://gitlab.com/kujeger/swayoutputctl/raw/master/swayoutputctl"
        dest: "{{ ansible_user_dir }}/bin"
        mode: 0770

    - name: Common | Downloading gotop...
      unarchive:
        src: "https://github.com/cjbassi/gotop/releases/download/{{ GOTOP_VERSION }}/gotop_{{ GOTOP_VERSION }}_linux_amd64.tgz"
        dest: "{{ ansible_user_dir }}/bin"
        creates: "{{ ansible_user_dir }}/bin/gotop"
        remote_src: yes
        mode: 0770

    - name: Common | Cloning Windows-10 themes and icons...
      git:
        repo: "{{ item.src }}"
        dest: "{{ item.dest }}"
        update: yes
      with_items:
        - {
            src: "https://github.com/B00merang-Project/Windows-10.git",
            dest: "{{ ansible_user_dir }}/.themes/Windows-10",
          }
        - {
            src: "https://github.com/B00merang-Artwork/Windows-10.git",
            dest: "{{ ansible_user_dir }}/.icons/Windows-10",
          }

    - name: Common | Extending user .bashrc...
      blockinfile:
        dest: "{{ ansible_user_dir }}/.bashrc"
        block: "for f in ~/.config/bash/*.sh; do source $f; done"
        marker: "
          # {mark} Sway desktop environment config"
        insertafter: EOF
        create: yes

    - name: Common | Creating root directories...
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "/root/.config/bash"
      become: yes

    - name: Common | Extending root .bashrc...
      blockinfile:
        dest: "/root/.bashrc"
        block: "for f in ~/.config/bash/*.sh; do source $f; done"
        marker: "
          # {mark} Sway desktop environment config"
        insertafter: EOF
        create: yes
      become: yes

    - name: Common | Templating root bashrc files...
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
      with_items:
        - {
            src: "{{ playbook_dir }}/config/bashrc.j2",
            dest: "/root/.config/bash/custom.sh",
          }
      become: yes

    - name: Common | Configuring user ~/.config/gtk-3.0/settings.ini
      ini_file:
        path: "{{ ansible_user_dir }}/.config/gtk-3.0/settings.ini"
        section: Settings
        option: "{{ item.option }}"
        value: "{{ item.value }}"
      with_items:
        - { option: "gtk-theme-name", value: "Windows-10" }
        - { option: "gtk-icon-theme-name", value: "Windows-10" }

    - name: Common | Configuring user~/.gtkrc-2.0
      ini_file:
        path: "{{ ansible_user_dir }}/.gtkrc-2.0"
        section: null
        option: "{{ item.option }}"
        value: "{{ item.value }}"
      with_items:
        - { option: "gtk-theme-name", value: '"Windows-10"' }
        - { option: "gtk-icon-theme-name", value: '"Windows-10"' }

    - name: Common | Configuring ~/.config/environment.d/profile.conf...
      blockinfile:
        dest: "{{ ansible_user_dir }}/.config/environment.d/profile.conf"
        block: |
          # Enable QT apps to have gtk theme
          QT_QPA_PLATFORMTHEME=qt5ct

          # Force wayland on qt apps
          QT_QPA_PLATFORM=wayland
          QT_WAYLAND_FORCE_DPI=96
          QT_WAYLAND_DISABLE_WINDOWDECORATION=1

          # Wayland RDP
          #WLR_RDP_TLS_CERT_PATH=$HOME/.config/wayland-rdp/tls.crt
          #WLR_RDP_TLS_KEY_PATH=$HOME/.config/wayland-rdp/tls.key
          #WLR_RDP_ADDRESS=0.0.0.0
          #WLR_RDP_PORT=3389
          #WLR_BACKENDS=rdp

          # Mozilla Wayland support
          # MOZ_ENABLE_WAYLAND=1
        marker: "
          # {mark} Sway desktop environment config"
        insertafter: EOF
        create: yes

    - name: Common | Configuring .pam_environment
      ini_file:
        path: "{{ ansible_user_dir }}/.pam_environment"
        section: null
        option: "{{ item.option }}"
        value: "{{ item.value }}"
      with_items:
        - { option: "PATH OVERRIDE", value: "${HOME}/bin:${PATH}" }

    - name: Common | Configuring ~/.config/starship.toml...
      blockinfile:
        dest: "{{ ansible_user_dir }}/.config/starship.toml"
        block: |
          # Disable the newline at the start of the prompt
          add_newline = false

          [cmd_duration]
          min_time = 6
          disabled= true

          [line_break]
          disabled = true

          [kubernetes]
          disabled = true
        marker: "
          # {mark} Sway desktop environment config"
        insertafter: EOF
        create: yes

    - name: Common | Informational Output
      debug:
        msg:
          - "After a reboot you can select Sway on the login screen as a new desktop environment."
